1. I use command substition to store in varibale threeAmin the number of lines in dictionary.txt that have at least 3 a's in it. My grep line looks for a*.*a.*a.*a.*a*, which is 0 or more occurences of a followed by zero or more occurences of any character then a and I repeat the pattern. Then I echo the number of lines that have at least 3 a's because each line is one word. Then I make 2 new variables called v1 and v2 where v1 is storing the number of lines where there are exactly 3 e's in it without e being the first letter then v2 stores the number of lines where E is the first letter and the word has exactly 3 e's. Then I add v1 and v2 to get the total number of words with exactly 3 e's. I then create some temp files, doubleE.txt, mostCommonThree.txt, sorting.txt and sorted.txt. I use grep to find the words that have 2 ee's in it using the regex [a-zA-Z]*e{2,}[a-zA-Z]*. I then use grep .{4}$ to look for the last 4 letters because for some reason .{3}$ gave me only 2 letters so there's probably a whitespace character at the end of each word. I use > to overwrite to doubleE.txt for the first regex I mentioned then the 2nd regex I mentioned looks for that patter in doubleE.txt and writes it to mostCommonThree.txt. Then I sort that file and get rid of all the duplicates while getting the number of occurences using uniq cd into sorting.txt. I use sort -nr on sorting.txt where I sort numerically in descending order into sorted.txt. Then I use head -3 sorted.txt to get the first three items from sorted.txt and rm all the temp files. 
2. 
